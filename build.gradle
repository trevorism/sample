buildscript {
    ext {
        creds = {
            username = findProperty("github.user") ?: System.getenv("GITHUB_ACTOR")
            password = findProperty("github.token") ?: System.getenv("GITHUB_TOKEN")
        }
    }
}

plugins {
    id("groovy")
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("io.micronaut.application") version "4.2.1"
    id("jacoco")
}

repositories {
    mavenCentral()
    maven {
        url uri("https://maven.pkg.github.com/trevorism/secure-http-utils")
        credentials creds
    }
}

dependencies {
    annotationProcessor("io.micronaut.validation:micronaut-validation-processor")

    implementation("io.micronaut.groovy:micronaut-runtime-groovy")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut.security:micronaut-security")
    runtimeOnly("org.yaml:snakeyaml")

    implementation("jakarta.annotation:jakarta.annotation-api")
    implementation 'io.projectreactor:reactor-core:3.6.0'

    implementation("io.swagger.core.v3:swagger-annotations")
    compileOnly("io.micronaut.openapi:micronaut-openapi"){
        exclude module:"slf4j-nop"
    }

    runtimeOnly("ch.qos.logback:logback-classic")
    implementation 'org.slf4j:slf4j-simple:2.0.9'

    testImplementation 'io.cucumber:cucumber-groovy:6.10.4'
}

application {
    mainClass.set("com.trevorism.Application")
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.trevorism.*")
    }
}

tasks.withType(GroovyCompile) {
    groovyOptions.forkOptions.jvmArgs.add('-Dgroovy.parameters=true')
    groovyOptions.forkOptions.jvmArgs.add('-Dmicronaut.openapi.views.spec=rapidoc.enabled=false,swagger-ui.enabled=true,swagger-ui.theme=flattop')
}